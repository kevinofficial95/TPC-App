{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Text, View } from \"../components/Themed\";\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login(_ref) {\n  var setShowContacts = _ref.setShowContacts;\n  var password = '1831';\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginButton = _useState2[0],\n      setLoginButton = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMessage = _useState4[0],\n      setErrorMessage = _useState4[1];\n\n  var navigation = useNavigation();\n\n  var handleSearch = function handleSearch(text) {\n    if (text == password) {\n      setLoginButton(false);\n    }\n  };\n\n  var handleLoginClick = function handleLoginClick() {\n    setShowContacts(true);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      style: styles.tinyLogo,\n      source: require(\"../assets/images/icon.png\")\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Enter Your Password...\",\n      keyboardType: \"number-pad\",\n      onChangeText: function onChangeText(text) {\n        handleSearch(text);\n      },\n      secureTextEntry: true\n    }), errorMessage && _jsx(Text, {\n      children: \"Wrong Password\"\n    }), _jsx(Pressable, {\n      style: styles.button,\n      disabled: loginButton,\n      onPress: function onPress() {\n        return handleLoginClick();\n      },\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Login\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    alignItems: 'center',\n    display: 'flex',\n    top: 500\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 17,\n    paddingHorizontal: 55,\n    borderRadius: 4,\n    backgroundColor: '#eb5d0c',\n    marginBottom: 700,\n    marginLeft: 115,\n    marginRight: 115\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  },\n  input: {\n    height: 50,\n    width: 350,\n    borderWidth: 0.2,\n    marginTop: 70,\n    borderRadius: 20,\n    padding: 10,\n    marginBottom: 40\n  },\n  tinyLogo: {\n    width: 200,\n    height: 200,\n    borderRadius: 30,\n    marginTop: 0,\n    marginBottom: 0\n  }\n});","map":{"version":3,"sources":["/Users/kevinjames/Desktop/TPC-Directory/screens/Login.tsx"],"names":["useNavigation","Text","View","useState","Login","setShowContacts","password","loginButton","setLoginButton","errorMessage","setErrorMessage","navigation","handleSearch","text","handleLoginClick","styles","container","tinyLogo","require","input","button","StyleSheet","create","backgroundColor","alignItems","display","top","justifyContent","paddingVertical","paddingHorizontal","borderRadius","marginBottom","marginLeft","marginRight","fontSize","lineHeight","fontWeight","letterSpacing","color","title","separator","marginVertical","height","width","borderWidth","marginTop","padding"],"mappings":";;;;;AACA,SAASA,aAAT,QAA8B,0BAA9B;AAGA,SAASC,IAAT,EAAeC,IAAf;AACA,SAAoBC,QAApB,QAAoC,OAApC;;;AAEA,eAAe,SAASC,KAAT,OAAmC;AAAA,MAAlBC,eAAkB,QAAlBA,eAAkB;AAEhD,MAAMC,QAAQ,GAAG,MAAjB;;AACA,kBAAoCH,QAAQ,CAAC,IAAD,CAA5C;AAAA;AAAA,MAAMI,WAAN;AAAA,MAAkBC,cAAlB;;AACA,mBAAsCL,QAAQ,CAAC,KAAD,CAA9C;AAAA;AAAA,MAAMM,YAAN;AAAA,MAAmBC,eAAnB;;AAMA,MAAMC,UAAU,GAAGX,aAAa,EAAhC;;AAGA,MAAMY,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC7B,QAAGA,IAAI,IAAIP,QAAX,EACA;AACEE,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AAEF,GAND;;AAOA,MAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BT,IAAAA,eAAe,CAAC,IAAD,CAAf;AAED,GAHD;;AAKA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACC,SAApB;AAAA,eAEJ,KAAC,KAAD;AAAQ,MAAA,KAAK,EAAED,MAAM,CAACE,QAAtB;AAAgC,MAAA,MAAM,EAAEC,OAAO;AAA/C,MAFI,EAII,KAAC,SAAD;AACE,MAAA,KAAK,EAAEH,MAAM,CAACI,KADhB;AAEE,MAAA,WAAW,EAAC,wBAFd;AAGE,MAAA,YAAY,EAAC,YAHf;AAIE,MAAA,YAAY,EAAE,sBAAAN,IAAI,EAAI;AAAED,QAAAA,YAAY,CAACC,IAAD,CAAZ;AAAoB,OAJ9C;AAKE,MAAA,eAAe,EAAI;AALrB,MAJJ,EAaFJ,YAAY,IAAI,KAAC,IAAD;AAAA;AAAA,MAbd,EAeC,KAAC,SAAD;AACG,MAAA,KAAK,EAAEM,MAAM,CAACK,MADjB;AAEG,MAAA,QAAQ,EAAIb,WAFf;AAGG,MAAA,OAAO,EAAE;AAAA,eAAKO,gBAAgB,EAArB;AAAA,OAHZ;AAAA,gBAKG,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACF,IAApB;AAAA;AAAA;AALH,MAfD;AAAA,IADF;AA0BD;AAED,IAAME,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,eAAe,EAAG,OADT;AAEVC,IAAAA,UAAU,EAAG,QAFH;AAGVC,IAAAA,OAAO,EAAG,MAHA;AAIVC,IAAAA,GAAG,EAAG;AAJI,GADoB;AAQ/BN,EAAAA,MAAM,EAAE;AACNI,IAAAA,UAAU,EAAE,QADN;AAENG,IAAAA,cAAc,EAAE,QAFV;AAGNC,IAAAA,eAAe,EAAE,EAHX;AAINC,IAAAA,iBAAiB,EAAE,EAJb;AAKNC,IAAAA,YAAY,EAAE,CALR;AAMNP,IAAAA,eAAe,EAAE,SANX;AAONQ,IAAAA,YAAY,EAAG,GAPT;AAQNC,IAAAA,UAAU,EAAG,GARP;AASNC,IAAAA,WAAW,EAAG;AATR,GARuB;AAmB/BpB,EAAAA,IAAI,EAAE;AACJqB,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,UAAU,EAAE,EAFR;AAGJC,IAAAA,UAAU,EAAE,MAHR;AAIJC,IAAAA,aAAa,EAAE,IAJX;AAKJC,IAAAA,KAAK,EAAE;AALH,GAnByB;AA0B/BC,EAAAA,KAAK,EAAE;AACLL,IAAAA,QAAQ,EAAE,EADL;AAELE,IAAAA,UAAU,EAAE;AAFP,GA1BwB;AA8B/BI,EAAAA,SAAS,EAAE;AACTC,IAAAA,cAAc,EAAE,EADP;AAETC,IAAAA,MAAM,EAAE,CAFC;AAGTC,IAAAA,KAAK,EAAE;AAHE,GA9BoB;AAmC/BxB,EAAAA,KAAK,EAAE;AACLuB,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,KAAK,EAAE,GAFF;AAGLC,IAAAA,WAAW,EAAE,GAHR;AAILC,IAAAA,SAAS,EAAE,EAJN;AAKLf,IAAAA,YAAY,EAAE,EALT;AAMLgB,IAAAA,OAAO,EAAE,EANJ;AAOLf,IAAAA,YAAY,EAAE;AAPT,GAnCwB;AA4C/Bd,EAAAA,QAAQ,EAAE;AACR0B,IAAAA,KAAK,EAAE,GADC;AAERD,IAAAA,MAAM,EAAE,GAFA;AAGRZ,IAAAA,YAAY,EAAG,EAHP;AAIRe,IAAAA,SAAS,EAAG,CAJJ;AAKRd,IAAAA,YAAY,EAAE;AALN;AA5CqB,CAAlB,CAAf","sourcesContent":["import { Button, Pressable, StyleSheet , TextInput , Image} from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\nimport { useEffect, useState } from 'react';\n\nexport default function Login( {setShowContacts}) {\n\n  const password = '1831'\n  const[loginButton,setLoginButton] = useState(true);\n  const[errorMessage,setErrorMessage] = useState(false);\n\n\n\n\n\n  const navigation = useNavigation<NativeStackNavigationProp<any>>();\n\n  \n  const handleSearch = (text) => {\n    if(text == password)\n    {\n      setLoginButton(false);\n    }\n   \n  }\n  const handleLoginClick = () => {\n    setShowContacts(true)\n    // navigation.navigate(\"BottomTabs\")\n  }\n\n  return (\n    <View style={styles.container}>\n\n<Image  style={styles.tinyLogo} source={require('../assets/images/icon.png')} />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Enter Your Password...\"\n          keyboardType=\"number-pad\"\n          onChangeText={text => { handleSearch(text) }}\n          secureTextEntry = {true}\n\n        />\n\n {errorMessage && <Text>Wrong Password</Text>}\n         \n     <Pressable\n        style={styles.button}\n        disabled = {loginButton}\n        onPress={() =>handleLoginClick()}\n      >\n        <Text style={styles.text}>Login</Text>\n      </Pressable>\n     \n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor : 'white',\n   alignItems : 'center',\n   display : 'flex',\n   top : 500\n\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 17,\n    paddingHorizontal: 55,\n    borderRadius: 4,\n    backgroundColor: '#eb5d0c',\n    marginBottom : 700,\n    marginLeft : 115,\n    marginRight : 115\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  input: {\n    height: 50,\n    width: 350,\n    borderWidth: 0.2,\n    marginTop: 70,\n    borderRadius: 20,\n    padding: 10,\n    marginBottom: 40\n  },\n  tinyLogo: {\n    width: 200,\n    height: 200,\n    borderRadius : 30,\n    marginTop : 0,\n    marginBottom: 0\n  }\n});\n"]},"metadata":{},"sourceType":"module"}