{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport JSReanimated from \"./JSReanimated\";\nvar reanimatedJS = new JSReanimated();\nexport var _updatePropsJS = function _updatePropsJS(updates, viewRef) {\n  if (viewRef._component) {\n    var component = viewRef._component;\n\n    var _Object$keys$reduce = Object.keys(updates).reduce(function (acc, key) {\n      var value = updates[key];\n      var index = typeof value === 'function' ? 1 : 0;\n      acc[index][key] = value;\n      return acc;\n    }, [{}, {}]),\n        _Object$keys$reduce2 = _slicedToArray(_Object$keys$reduce, 1),\n        rawStyles = _Object$keys$reduce2[0];\n\n    if (typeof component.setNativeProps === 'function') {\n      setNativeProps(component, rawStyles);\n    } else if (Object.keys(component.props).length > 0) {\n      Object.keys(component.props).forEach(function (key) {\n        if (!rawStyles[key]) {\n          return;\n        }\n\n        var dashedKey = key.replace(/[A-Z]/g, function (m) {\n          return '-' + m.toLowerCase();\n        });\n\n        component._touchableNode.setAttribute(dashedKey, rawStyles[key]);\n      });\n    } else {\n      console.warn('It is not possible to manipulate component');\n    }\n  }\n};\n\nvar setNativeProps = function setNativeProps(component, style) {\n  var previousStyle = component.previousStyle ? component.previousStyle : {};\n  var currentStyle = Object.assign(Object.assign({}, previousStyle), style);\n  component.previousStyle = currentStyle;\n  component.setNativeProps({\n    style: currentStyle\n  });\n};\n\nexport default reanimatedJS;","map":{"version":3,"sources":["/Users/kevinjames/Desktop/TPC-App/node_modules/react-native-reanimated/lib/reanimated2/js-reanimated/index.js"],"names":["JSReanimated","reanimatedJS","_updatePropsJS","updates","viewRef","_component","component","Object","keys","reduce","acc","key","value","index","rawStyles","setNativeProps","props","length","forEach","dashedKey","replace","m","toLowerCase","_touchableNode","setAttribute","console","warn","style","previousStyle","currentStyle","assign"],"mappings":";AAAA,OAAOA,YAAP;AACA,IAAMC,YAAY,GAAG,IAAID,YAAJ,EAArB;AACA,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAUC,OAAV,EAAsB;AAChD,MAAIA,OAAO,CAACC,UAAZ,EAAwB;AACpB,QAAMC,SAAS,GAAGF,OAAO,CAACC,UAA1B;;AACA,8BAAoBE,MAAM,CAACC,IAAP,CAAYL,OAAZ,EAAqBM,MAArB,CAA4B,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1D,UAAMC,KAAK,GAAGT,OAAO,CAACQ,GAAD,CAArB;AACA,UAAME,KAAK,GAAG,OAAOD,KAAP,KAAiB,UAAjB,GAA8B,CAA9B,GAAkC,CAAhD;AACAF,MAAAA,GAAG,CAACG,KAAD,CAAH,CAAWF,GAAX,IAAkBC,KAAlB;AACA,aAAOF,GAAP;AACH,KALmB,EAKjB,CAAC,EAAD,EAAK,EAAL,CALiB,CAApB;AAAA;AAAA,QAAOI,SAAP;;AAMA,QAAI,OAAOR,SAAS,CAACS,cAAjB,KAAoC,UAAxC,EAAoD;AAChDA,MAAAA,cAAc,CAACT,SAAD,EAAYQ,SAAZ,CAAd;AACH,KAFD,MAGK,IAAIP,MAAM,CAACC,IAAP,CAAYF,SAAS,CAACU,KAAtB,EAA6BC,MAA7B,GAAsC,CAA1C,EAA6C;AAC9CV,MAAAA,MAAM,CAACC,IAAP,CAAYF,SAAS,CAACU,KAAtB,EAA6BE,OAA7B,CAAqC,UAACP,GAAD,EAAS;AAC1C,YAAI,CAACG,SAAS,CAACH,GAAD,CAAd,EAAqB;AACjB;AACH;;AACD,YAAMQ,SAAS,GAAGR,GAAG,CAACS,OAAJ,CAAY,QAAZ,EAAsB,UAACC,CAAD;AAAA,iBAAO,MAAMA,CAAC,CAACC,WAAF,EAAb;AAAA,SAAtB,CAAlB;;AACAhB,QAAAA,SAAS,CAACiB,cAAV,CAAyBC,YAAzB,CAAsCL,SAAtC,EAAiDL,SAAS,CAACH,GAAD,CAA1D;AACH,OAND;AAOH,KARI,MASA;AACDc,MAAAA,OAAO,CAACC,IAAR,CAAa,4CAAb;AACH;AACJ;AACJ,CAzBM;;AA0BP,IAAMX,cAAc,GAAG,SAAjBA,cAAiB,CAACT,SAAD,EAAYqB,KAAZ,EAAsB;AACzC,MAAMC,aAAa,GAAGtB,SAAS,CAACsB,aAAV,GAA0BtB,SAAS,CAACsB,aAApC,GAAoD,EAA1E;AACA,MAAMC,YAAY,GAAGtB,MAAM,CAACuB,MAAP,CAAcvB,MAAM,CAACuB,MAAP,CAAc,EAAd,EAAkBF,aAAlB,CAAd,EAAgDD,KAAhD,CAArB;AACArB,EAAAA,SAAS,CAACsB,aAAV,GAA0BC,YAA1B;AACAvB,EAAAA,SAAS,CAACS,cAAV,CAAyB;AAAEY,IAAAA,KAAK,EAAEE;AAAT,GAAzB;AACH,CALD;;AAMA,eAAe5B,YAAf","sourcesContent":["import JSReanimated from './JSReanimated';\nconst reanimatedJS = new JSReanimated();\nexport const _updatePropsJS = (updates, viewRef) => {\n    if (viewRef._component) {\n        const component = viewRef._component;\n        const [rawStyles] = Object.keys(updates).reduce((acc, key) => {\n            const value = updates[key];\n            const index = typeof value === 'function' ? 1 : 0;\n            acc[index][key] = value;\n            return acc;\n        }, [{}, {}]);\n        if (typeof component.setNativeProps === 'function') {\n            setNativeProps(component, rawStyles);\n        }\n        else if (Object.keys(component.props).length > 0) {\n            Object.keys(component.props).forEach((key) => {\n                if (!rawStyles[key]) {\n                    return;\n                }\n                const dashedKey = key.replace(/[A-Z]/g, (m) => '-' + m.toLowerCase());\n                component._touchableNode.setAttribute(dashedKey, rawStyles[key]);\n            });\n        }\n        else {\n            console.warn('It is not possible to manipulate component');\n        }\n    }\n};\nconst setNativeProps = (component, style) => {\n    const previousStyle = component.previousStyle ? component.previousStyle : {};\n    const currentStyle = Object.assign(Object.assign({}, previousStyle), style);\n    component.previousStyle = currentStyle;\n    component.setNativeProps({ style: currentStyle });\n};\nexport default reanimatedJS;\n"]},"metadata":{},"sourceType":"module"}