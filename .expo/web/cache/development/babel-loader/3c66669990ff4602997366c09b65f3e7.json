{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport * as Font from \"expo-font\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport React from \"react\";\nexport function useLoadedAssets() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoadingComplete = _React$useState2[0],\n      setLoadingComplete = _React$useState2[1];\n\n  React.useEffect(function () {\n    function loadResourcesAndDataAsync() {\n      return _loadResourcesAndDataAsync.apply(this, arguments);\n    }\n\n    function _loadResourcesAndDataAsync() {\n      _loadResourcesAndDataAsync = _asyncToGenerator(function* () {\n        try {\n          SplashScreen.preventAutoHideAsync();\n          yield Font.loadAsync(Ionicons.font);\n        } catch (e) {\n          console.warn(e);\n        } finally {\n          setLoadingComplete(true);\n          SplashScreen.hideAsync();\n        }\n      });\n      return _loadResourcesAndDataAsync.apply(this, arguments);\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n  return isLoadingComplete;\n}","map":{"version":3,"sources":["/Users/kevinjames/Desktop/TPC-App/hooks/useLoadedAssets.js"],"names":["Ionicons","Font","SplashScreen","React","useLoadedAssets","useState","isLoadingComplete","setLoadingComplete","useEffect","loadResourcesAndDataAsync","preventAutoHideAsync","loadAsync","font","e","console","warn","hideAsync"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,6BAArB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAO,KAAKC,YAAZ,MAA8B,oBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,eAAT,GAA2B;AAChC,wBAAgDD,KAAK,CAACE,QAAN,CAAe,KAAf,CAAhD;AAAA;AAAA,MAAOC,iBAAP;AAAA,MAA0BC,kBAA1B;;AAGAJ,EAAAA,KAAK,CAACK,SAAN,CAAgB,YAAM;AAAA,aACLC,yBADK;AAAA;AAAA;;AAAA;AAAA,qDACpB,aAA2C;AACzC,YAAI;AACFP,UAAAA,YAAY,CAACQ,oBAAb;AAGA,gBAAMT,IAAI,CAACU,SAAL,CAAeX,QAAQ,CAACY,IAAxB,CAAN;AACD,SALD,CAKE,OAAOC,CAAP,EAAU;AAEVC,UAAAA,OAAO,CAACC,IAAR,CAAaF,CAAb;AACD,SARD,SAQU;AACRN,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAL,UAAAA,YAAY,CAACc,SAAb;AACD;AACF,OAdmB;AAAA;AAAA;;AAgBpBP,IAAAA,yBAAyB;AAC1B,GAjBD,EAiBG,EAjBH;AAmBA,SAAOH,iBAAP;AACD","sourcesContent":["import Ionicons from \"@expo/vector-icons/Ionicons\";\nimport * as Font from \"expo-font\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport React from \"react\";\n\nexport function useLoadedAssets() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync(Ionicons.font);\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n"]},"metadata":{},"sourceType":"module"}