{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Text, View } from \"../components/Themed\";\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login(_ref) {\n  var setShowContacts = _ref.setShowContacts;\n\n  var image = require(\"../assets/images/group.jpg\");\n\n  var contactsArray = require(\"../constants/Contacts.json\");\n\n  var password = 'tpc';\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      passwordText = _useState2[0],\n      setPasswordText = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      phoneNumber = _useState4[0],\n      setPhoneNumber = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      postCode = _useState6[0],\n      setPostCode = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      info = _useState8[0],\n      setInfo = _useState8[1];\n\n  var handleLoginClick = function handleLoginClick() {\n    contactsArray.map(function (item) {\n      if (((item.PhoneNumber == String(phoneNumber[0]) == 7 ? 0 + phoneNumber : phoneNumber) || (item.SpousePhNo == String(phoneNumber[0]) == 7 ? 0 + phoneNumber : phoneNumber)) && item.postcode == postCode.toUpperCase() && passwordText == password) {\n        setShowContacts(true);\n      } else {\n        setInfo(true);\n      }\n    });\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      children: [_jsx(ImageBackground, {\n        source: image,\n        style: {\n          width: \"100%\",\n          height: 190,\n          marginBottom: 20\n        }\n      }), _jsx(TextInput, {\n        style: styles.phoneNumber,\n        placeholder: \"  Enter Your Phone Number Registered With Church...\",\n        keyboardType: \"default\",\n        onChangeText: function onChangeText(text) {\n          setPhoneNumber(text);\n        }\n      }), _jsx(TextInput, {\n        style: styles.postCode,\n        placeholder: \"  Enter Your Postcode...\",\n        keyboardType: \"default\",\n        onChangeText: function onChangeText(text) {\n          setPostCode(text);\n        }\n      }), _jsx(TextInput, {\n        style: styles.password,\n        placeholder: \"  Enter Your Password...\",\n        keyboardType: \"default\",\n        onChangeText: function onChangeText(text) {\n          setPasswordText(text);\n        },\n        secureTextEntry: true\n      }), info && _jsx(Text, {\n        style: styles.info,\n        children: \"Entered Info is incorrect. Please Try Again\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return handleLoginClick();\n        },\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Login\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  button: {\n    paddingVertical: 17,\n    paddingHorizontal: 55,\n    borderRadius: 20,\n    backgroundColor: '#eb5d0c',\n    width: '50%',\n    alignSelf: 'center',\n    marginTop: 110\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n    textAlign: 'center'\n  },\n  password: {\n    height: 50,\n    width: 350,\n    borderWidth: 1,\n    borderRadius: 20,\n    marginBottom: 0,\n    display: 'flex',\n    alignSelf: 'center',\n    top: 50\n  },\n  info: {\n    display: 'flex',\n    alignSelf: 'center',\n    top: 70,\n    color: 'red'\n  },\n  phoneNumber: {\n    height: 50,\n    width: 350,\n    borderWidth: 1,\n    borderRadius: 20,\n    marginBottom: 0,\n    display: 'flex',\n    alignSelf: 'center'\n  },\n  postCode: {\n    height: 50,\n    width: 350,\n    borderWidth: 1,\n    borderRadius: 20,\n    marginBottom: 0,\n    display: 'flex',\n    alignSelf: 'center',\n    top: 30\n  }\n});","map":{"version":3,"sources":["/Users/kevinjames/Desktop/TPC-Directory/screens/Login.tsx"],"names":["Text","View","useState","Login","setShowContacts","image","require","contactsArray","password","passwordText","setPasswordText","phoneNumber","setPhoneNumber","postCode","setPostCode","info","setInfo","handleLoginClick","map","item","PhoneNumber","String","SpousePhNo","postcode","toUpperCase","styles","container","width","height","marginBottom","text","button","StyleSheet","create","flex","paddingVertical","paddingHorizontal","borderRadius","backgroundColor","alignSelf","marginTop","fontSize","lineHeight","fontWeight","letterSpacing","color","textAlign","borderWidth","display","top"],"mappings":";;;;;;AAEA,SAASA,IAAT,EAAeC,IAAf;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAGA,eAAe,SAASC,KAAT,OAAoC;AAAA,MAAnBC,eAAmB,QAAnBA,eAAmB;;AAGjD,MAAMC,KAAK,GAAGC,OAAO,8BAArB;;AACA,MAAIC,aAAa,GAAGD,OAAO,8BAA3B;;AAEA,MAAME,QAAQ,GAAG,KAAjB;;AACA,kBAAwCN,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOO,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAAsCR,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOS,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAgCV,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAwBZ,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAOa,IAAP;AAAA,MAAaC,OAAb;;AAIA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAE7BV,IAAAA,aAAa,CAACW,GAAd,CAAkB,UAAAC,IAAI,EAAI;AACxB,UAAI,CAAC,CAACA,IAAI,CAACC,WAAL,IAAoBC,MAAM,CAACV,WAAW,CAAC,CAAD,CAAZ,CAA1B,IAA8C,CAA9C,GAAkD,IAAIA,WAAtD,GAAoEA,WAArE,MAAsFQ,IAAI,CAACG,UAAL,IAAmBD,MAAM,CAACV,WAAW,CAAC,CAAD,CAAZ,CAAzB,IAA6C,CAA7C,GAAiD,IAAIA,WAArD,GAAmEA,WAAzJ,CAAD,KAA4KQ,IAAI,CAACI,QAAL,IAAiBV,QAAQ,CAACW,WAAT,EAA7L,IAAyNf,YAAY,IAAID,QAA7O,EAAwP;AACtPJ,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAFD,MAIA;AACEY,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,KARD;AASD,GAXD;;AAcA,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACC,SAApB;AAAA,cACE,MAAC,UAAD;AAAA,iBACA,KAAC,eAAD;AAAiB,QAAA,MAAM,EAAErB,KAAzB;AAAgC,QAAA,KAAK,EAAE;AACzCsB,UAAAA,KAAK,EAAE,MADkC;AAEzCC,UAAAA,MAAM,EAAE,GAFiC;AAGzCC,UAAAA,YAAY,EAAG;AAH0B;AAAvC,QADA,EAOA,KAAC,SAAD;AACE,QAAA,KAAK,EAAEJ,MAAM,CAACd,WADhB;AAEE,QAAA,WAAW,EAAC,qDAFd;AAGE,QAAA,YAAY,EAAC,SAHf;AAIE,QAAA,YAAY,EAAE,sBAAAmB,IAAI,EAAI;AAAElB,UAAAA,cAAc,CAACkB,IAAD,CAAd;AAAsB;AAJhD,QAPA,EAaA,KAAC,SAAD;AACE,QAAA,KAAK,EAAEL,MAAM,CAACZ,QADhB;AAEE,QAAA,WAAW,EAAC,0BAFd;AAGE,QAAA,YAAY,EAAC,SAHf;AAIE,QAAA,YAAY,EAAE,sBAAAiB,IAAI,EAAI;AAAEhB,UAAAA,WAAW,CAACgB,IAAD,CAAX;AAAmB;AAJ7C,QAbA,EAmBA,KAAC,SAAD;AACE,QAAA,KAAK,EAAEL,MAAM,CAACjB,QADhB;AAEE,QAAA,WAAW,EAAC,0BAFd;AAGE,QAAA,YAAY,EAAC,SAHf;AAIE,QAAA,YAAY,EAAE,sBAAAsB,IAAI,EAAI;AAAEpB,UAAAA,eAAe,CAACoB,IAAD,CAAf;AAAuB,SAJjD;AAKE,QAAA,eAAe,EAAE;AALnB,QAnBA,EA2BCf,IAAI,IAAI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEU,MAAM,CAACV,IAApB;AAAA;AAAA,QA3BT,EA6BA,KAAC,gBAAD;AACE,QAAA,KAAK,EAAEU,MAAM,CAACM,MADhB;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAMd,gBAAgB,EAAtB;AAAA,SAFX;AAAA,kBAIE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEQ,MAAM,CAACK,IAApB;AAAA;AAAA;AAJF,QA7BA;AAAA;AADF,IADF;AAwCD;AAED,IAAML,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACVQ,IAAAA,IAAI,EAAG;AADG,GADoB;AAI/BH,EAAAA,MAAM,EAAE;AACNI,IAAAA,eAAe,EAAE,EADX;AAENC,IAAAA,iBAAiB,EAAE,EAFb;AAGNC,IAAAA,YAAY,EAAE,EAHR;AAINC,IAAAA,eAAe,EAAE,SAJX;AAKNX,IAAAA,KAAK,EAAG,KALF;AAMNY,IAAAA,SAAS,EAAG,QANN;AAONC,IAAAA,SAAS,EAAG;AAPN,GAJuB;AAc/BV,EAAAA,IAAI,EAAE;AACJW,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,UAAU,EAAE,EAFR;AAGJC,IAAAA,UAAU,EAAE,MAHR;AAIJC,IAAAA,aAAa,EAAE,IAJX;AAKJC,IAAAA,KAAK,EAAE,OALH;AAMJC,IAAAA,SAAS,EAAG;AANR,GAdyB;AAsB/BtC,EAAAA,QAAQ,EAAE;AACRoB,IAAAA,MAAM,EAAE,EADA;AAERD,IAAAA,KAAK,EAAE,GAFC;AAGRoB,IAAAA,WAAW,EAAE,CAHL;AAIRV,IAAAA,YAAY,EAAE,EAJN;AAKRR,IAAAA,YAAY,EAAE,CALN;AAMRmB,IAAAA,OAAO,EAAG,MANF;AAORT,IAAAA,SAAS,EAAG,QAPJ;AAQRU,IAAAA,GAAG,EAAG;AARE,GAtBqB;AAgC/BlC,EAAAA,IAAI,EAAE;AACJiC,IAAAA,OAAO,EAAG,MADN;AAEJT,IAAAA,SAAS,EAAG,QAFR;AAGJU,IAAAA,GAAG,EAAG,EAHF;AAIJJ,IAAAA,KAAK,EAAG;AAJJ,GAhCyB;AAsC/BlC,EAAAA,WAAW,EAAE;AACXiB,IAAAA,MAAM,EAAE,EADG;AAEXD,IAAAA,KAAK,EAAE,GAFI;AAGXoB,IAAAA,WAAW,EAAE,CAHF;AAIXV,IAAAA,YAAY,EAAE,EAJH;AAKXR,IAAAA,YAAY,EAAE,CALH;AAMXmB,IAAAA,OAAO,EAAG,MANC;AAOXT,IAAAA,SAAS,EAAG;AAPD,GAtCkB;AA+C/B1B,EAAAA,QAAQ,EAAE;AACRe,IAAAA,MAAM,EAAE,EADA;AAERD,IAAAA,KAAK,EAAE,GAFC;AAGRoB,IAAAA,WAAW,EAAE,CAHL;AAIRV,IAAAA,YAAY,EAAE,EAJN;AAKRR,IAAAA,YAAY,EAAE,CALN;AAMRmB,IAAAA,OAAO,EAAG,MANF;AAORT,IAAAA,SAAS,EAAG,QAPJ;AAQRU,IAAAA,GAAG,EAAG;AARE;AA/CqB,CAAlB,CAAf","sourcesContent":["\nimport { ScrollView, StyleSheet, TextInput, TouchableOpacity , ImageBackground , ToastAndroid, Platform, Alert } from 'react-native';\nimport { Text, View } from '../components/Themed';\nimport { useState } from 'react';\n\n\nexport default function Login({ setShowContacts }) {\n\n\n  const image = require('../assets/images/group.jpg')\n  let contactsArray = require('../constants/Contacts.json');\n\n  const password = 'tpc'\n  const [passwordText, setPasswordText] = useState('')\n  const [phoneNumber, setPhoneNumber] = useState('')\n  const [postCode, setPostCode] = useState('')\n  const [info, setInfo] = useState(false)\n\n\n\n  const handleLoginClick = () => {\n         \n    contactsArray.map(item => {\n      if (((item.PhoneNumber == String(phoneNumber[0]) == 7 ? 0 + phoneNumber : phoneNumber) || (item.SpousePhNo == String(phoneNumber[0]) == 7 ? 0 + phoneNumber : phoneNumber)) && (item.postcode == postCode.toUpperCase()) && (passwordText == password)) {\n        setShowContacts(true)\n      }\n      else \n      {\n        setInfo(true)\n      }\n    })\n  }\n\n\n  return (\n    <View style={styles.container}>\n      <ScrollView>\n      <ImageBackground source={image} style={{\n    width: \"100%\",\n    height: 190,\n    marginBottom : 20\n  }}\n  ></ImageBackground>\n      <TextInput\n        style={styles.phoneNumber}\n        placeholder=\"  Enter Your Phone Number Registered With Church...\"\n        keyboardType=\"default\"\n        onChangeText={text => { setPhoneNumber(text) }}\n      />\n      <TextInput\n        style={styles.postCode}\n        placeholder=\"  Enter Your Postcode...\"\n        keyboardType=\"default\"\n        onChangeText={text => { setPostCode(text) }}\n      />\n      <TextInput\n        style={styles.password}\n        placeholder=\"  Enter Your Password...\"\n        keyboardType=\"default\"\n        onChangeText={text => { setPasswordText(text) }}\n        secureTextEntry={true}\n      />\n\n      {info && <Text style={styles.info}>Entered Info is incorrect. Please Try Again</Text>}\n\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => handleLoginClick()}\n      >\n        <Text style={styles.text}>Login</Text>\n      </TouchableOpacity>\n    </ScrollView>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n   flex : 1\n  },\n  button: {\n    paddingVertical: 17,\n    paddingHorizontal: 55,\n    borderRadius: 20,\n    backgroundColor: '#eb5d0c',\n    width : '50%',\n    alignSelf : 'center',\n    marginTop : 110\n    \n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n    textAlign : 'center'\n  },\n  password: {\n    height: 50,\n    width: 350,\n    borderWidth: 1,\n    borderRadius: 20,\n    marginBottom: 0,\n    display : 'flex',\n    alignSelf : 'center',\n    top : 50\n  },\n  info: {\n    display : 'flex',\n    alignSelf : 'center',\n    top : 70,\n    color : 'red'\n  },\n  phoneNumber: {\n    height: 50,\n    width: 350,\n    borderWidth: 1,\n    borderRadius: 20,\n    marginBottom: 0,\n    display : 'flex',\n    alignSelf : 'center'\n  },\n  postCode: {\n    height: 50,\n    width: 350,\n    borderWidth: 1,\n    borderRadius: 20,\n    marginBottom: 0,\n    display : 'flex',\n    alignSelf : 'center',\n    top : 30\n  }\n})\n"]},"metadata":{},"sourceType":"module"}