{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Text, View } from \"../components/Themed\";\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login(_ref) {\n  var setShowContacts = _ref.setShowContacts;\n\n  var image = require(\"../assets/images/group.jpg\");\n\n  var contactsArray = require(\"../constants/Contacts.json\");\n\n  var password = 'tpc';\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      passwordText = _useState2[0],\n      setPasswordText = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      phoneNumber = _useState4[0],\n      setPhoneNumber = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      postCode = _useState6[0],\n      setPostCode = _useState6[1];\n\n  var handleLoginClick = function handleLoginClick() {\n    contactsArray.map(function (item) {\n      if ((item.PhoneNumber == phoneNumber || item.SpousePhNo == phoneNumber) && item.postcode == postCode && passwordText == password) {\n        setShowContacts(true);\n      }\n    });\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      children: [_jsx(ImageBackground, {\n        source: image,\n        style: {\n          width: \"100%\",\n          height: 120,\n          backgroundColor: '#000',\n          padding: 0,\n          paddingVertical: 0,\n          position: 'absolute',\n          bottom: 0\n        }\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter Your Phone Number Registered With Church...\",\n        keyboardType: \"default\",\n        onChangeText: function onChangeText(text) {\n          setPhoneNumber(text);\n        }\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter Your Postcode...\",\n        keyboardType: \"default\",\n        onChangeText: function onChangeText(text) {\n          setPostCode(text);\n        }\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter Your Password...\",\n        keyboardType: \"default\",\n        onChangeText: function onChangeText(text) {\n          setPasswordText(text);\n        },\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return handleLoginClick();\n        },\n        children: _jsx(Text, {\n          style: styles.text,\n          children: \"Login\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 17,\n    paddingHorizontal: 55,\n    borderRadius: 4,\n    backgroundColor: '#eb5d0c'\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  },\n  input: {\n    height: 50,\n    width: 350,\n    borderWidth: 0.2,\n    marginTop: 70,\n    borderRadius: 20,\n    padding: 10,\n    marginBottom: 40,\n    top: 10\n  },\n  tinyLogo: {\n    width: '90%',\n    height: '50%',\n    marginTop: 20,\n    display: 'flex'\n  }\n});","map":{"version":3,"sources":["/Users/kevinjames/Desktop/TPC-Directory/screens/Login.tsx"],"names":["Text","View","useState","Login","setShowContacts","image","require","contactsArray","password","passwordText","setPasswordText","phoneNumber","setPhoneNumber","postCode","setPostCode","handleLoginClick","map","item","PhoneNumber","SpousePhNo","postcode","styles","container","width","height","backgroundColor","padding","paddingVertical","position","bottom","input","text","button","StyleSheet","create","flex","alignItems","justifyContent","paddingHorizontal","borderRadius","fontSize","lineHeight","fontWeight","letterSpacing","color","borderWidth","marginTop","marginBottom","top","tinyLogo","display"],"mappings":"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","sourcesContent":["import { ScrollView, StyleSheet, TextInput, TouchableOpacity , ImageBackground } from 'react-native';\nimport { Text, View } from '../components/Themed';\nimport { useState } from 'react';\n\nexport default function Login({ setShowContacts }) {\n\n\n  const image = require('../assets/images/group.jpg')\n  let contactsArray = require('../constants/Contacts.json');\n\n  const password = 'tpc'\n  const [passwordText, setPasswordText] = useState('')\n  const [phoneNumber, setPhoneNumber] = useState('')\n  const [postCode, setPostCode] = useState('')\n\n  const handleLoginClick = () => {\n\n    contactsArray.map(item => {\n      if (((item.PhoneNumber == phoneNumber) || (item.SpousePhNo == phoneNumber)) && (item.postcode == postCode) && (passwordText == password)) {\n        setShowContacts(true)\n      }\n    })\n  }\n\n  return (\n    <View style={styles.container}>\n      <ScrollView>\n      <ImageBackground source={image} style={{\n    width: \"100%\",\n    height: 120,\n    backgroundColor:'#000',\n    padding: 0,\n    paddingVertical: 0,\n    position: 'absolute',\n  bottom:0\n  }}\n  ></ImageBackground>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Enter Your Phone Number Registered With Church...\"\n        keyboardType=\"default\"\n        onChangeText={text => { setPhoneNumber(text) }}\n      /><TextInput\n        style={styles.input}\n        placeholder=\"Enter Your Postcode...\"\n        keyboardType=\"default\"\n        onChangeText={text => { setPostCode(text) }}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Enter Your Password...\"\n        keyboardType=\"default\"\n        onChangeText={text => { setPasswordText(text) }}\n        secureTextEntry={true}\n      />\n\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => handleLoginClick()}\n      >\n        <Text style={styles.text}>Login</Text>\n      </TouchableOpacity>\n    </ScrollView>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n   flex : 1\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 17,\n    paddingHorizontal: 55,\n    borderRadius: 4,\n    backgroundColor: '#eb5d0c',\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  input: {\n    height: 50,\n    width: 350,\n    borderWidth: 0.2,\n    marginTop: 70,\n    borderRadius: 20,\n    padding: 10,\n    marginBottom: 40,\n    top: 10,\n  },\n  tinyLogo : {\n    width : '90%',\n    height : '50%',\n    marginTop : 20,\n    display : 'flex'\n  }\n})\n"]},"metadata":{},"sourceType":"module"}