{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Text, View } from \"../components/Themed\";\nimport Login from \"./Login\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar TabOneScreen = function TabOneScreen(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showContacts = _useState2[0],\n      setShowContacts = _useState2[1];\n\n  var navigation = useNavigation();\n\n  var contactsArray = require(\"../constants/Contacts.json\");\n\n  var _useState3 = useState(contactsArray),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredArray = _useState4[0],\n      setfilteredArray = _useState4[1];\n\n  var handleSearch = function handleSearch(text) {\n    setfilteredArray(contactsArray.filter(function (i) {\n      return i.Name.toLowerCase().includes(text) || i.spouseName.toLowerCase().includes(text);\n    }));\n  };\n\n  var handleContactClick = function handleContactClick(name, address, Photo, phoneNo, spouseName, spouseNo, email, kids) {\n    navigation.navigate(\"Modal\", {\n      contactname: name,\n      address: address,\n      photo: Photo,\n      phoneNo: phoneNo,\n      spouseName: spouseName,\n      spouseNo: spouseNo,\n      email: email,\n      kids: kids\n    });\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [!showContacts && _jsx(Text, {\n        style: styles.info,\n        children: \"Note : Please enter the password given by church to view contacts\"\n      }), !showContacts && _jsx(Login, {\n        setShowContacts: setShowContacts\n      })]\n    }), _jsx(ScrollView, {\n      style: styles.scrollView,\n      children: showContacts && _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Search By Name.....\",\n          keyboardType: \"name-phone-pad\",\n          onChangeText: function onChangeText(text) {\n            handleSearch(text);\n          }\n        }), filteredArray.map(function (item, i) {\n          return _jsxs(View, {\n            style: styles.contactview,\n            children: [_jsx(Image, {\n              style: styles.tinyLogo,\n              source: {\n                uri: item.Photo\n              }\n            }, i + 1), _jsx(Text, {\n              style: styles.contacts,\n              onPress: function onPress() {\n                return handleContactClick(item.Name, item.Address, item.Photo, item.PhoneNumber, item.SpouseName, item.SpousePhNo, item.email, item.kids);\n              },\n              children: item.Name\n            }, i + 2)]\n          }, i);\n        })]\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  info: {\n    top: 390,\n    fontSize: 10,\n    color: 'red',\n    marginLeft: -45\n  },\n  scrollView: {},\n  contacts: {\n    borderWidth: 0.16,\n    marginTop: -55,\n    height: 100,\n    width: 400,\n    paddingTop: 26,\n    fontWeight: '500',\n    fontSize: 15,\n    paddingLeft: 110\n  },\n  input: {\n    height: 50,\n    width: 350,\n    borderWidth: 0.2,\n    marginTop: 20,\n    borderRadius: 20,\n    padding: 10,\n    marginBottom: 40\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50,\n    borderRadius: 30,\n    marginLeft: 40,\n    marginBottom: -5\n  },\n  contactview: {\n    height: 70,\n    marginTop: 0\n  }\n});\nexport default TabOneScreen;","map":{"version":3,"sources":["/Users/kevinjames/Desktop/TPC-Directory/screens/TabOneScreen.tsx"],"names":["useNavigation","useState","Text","View","Login","TabOneScreen","showContacts","setShowContacts","navigation","contactsArray","require","filteredArray","setfilteredArray","handleSearch","text","filter","i","Name","toLowerCase","includes","spouseName","handleContactClick","name","address","Photo","phoneNo","spouseNo","email","kids","navigate","contactname","photo","styles","container","info","scrollView","input","map","item","contactview","tinyLogo","uri","contacts","Address","PhoneNumber","SpouseName","SpousePhNo","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","top","fontSize","color","marginLeft","borderWidth","marginTop","height","width","paddingTop","fontWeight","paddingLeft","borderRadius","padding","marginBottom"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { fetchUpdateAsync } from 'expo-updates';\nimport { useEffect, useState } from 'react';\nimport { Alert, ScrollView, StyleSheet, TextInput, Image  } from 'react-native';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\nimport { RootTabScreenProps } from '../types';\nimport Login from './Login';\n\nconst TabOneScreen = ({  }: RootTabScreenProps<'TabOne'>) => {\n\n  const[showContacts, setShowContacts] = useState(false)\n\n  const navigation = useNavigation<NativeStackNavigationProp<any>>();\n\n  let contactsArray = require('../constants/Contacts.json');\n     const[filteredArray,setfilteredArray] = useState(contactsArray);\n\n      const handleSearch = (text) => {\n          setfilteredArray(contactsArray.filter(i => (i.Name.toLowerCase().includes(text) || i.spouseName.toLowerCase().includes(text))))\n     }\n\n  const handleContactClick = (name,address,Photo,phoneNo,spouseName,spouseNo,email,kids) => {\n    navigation.navigate(\"Modal\", {contactname : name,address : address, photo : Photo, phoneNo : phoneNo,spouseName : spouseName,\n    spouseNo : spouseNo,email : email,kids : kids})\n  }\n  return (\n   \n      <><View style={styles.container}>\n        {!showContacts && <Text style={styles.info}>Note : Please enter the password given by church to view contacts</Text>}\n      {!showContacts && <Login setShowContacts={setShowContacts}></Login>}\n    </View>\n    \n    <ScrollView style={styles.scrollView}>\n        {showContacts && <View style={styles.container}>\n\n          <TextInput\n            style={styles.input}\n            placeholder=\"Search By Name.....\"\n            keyboardType=\"name-phone-pad\"\n            onChangeText={text => { handleSearch(text) } } />\n          {filteredArray.map((item, i) => {\n            return (\n              <View style={styles.contactview}\n                key={i}\n              >\n\n                <Image\n                  key={i + 1}\n                  style={styles.tinyLogo}\n                  source={{\n                    uri: item.Photo,\n                  }} />\n                <Text key={i + 2} style={styles.contacts} onPress={() => handleContactClick(item.Name, item.Address, item.Photo, item.PhoneNumber,\n                  item.SpouseName, item.SpousePhNo, item.email, item.kids)}>\n                  {item.Name}\n                </Text>\n              </View>\n\n            );\n\n\n          }\n          )}\n        </View>}\n      </ScrollView></>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor : 'white'\n  },\n  info : {\ntop : 390,\nfontSize : 10,\ncolor : 'red',\nmarginLeft: -45\n  },\n  scrollView: {\n  },\n  contacts: {\n    borderWidth: 0.16,\n    marginTop: -55,\n    height:100,\n    width: 400,\n    paddingTop: 26,\n    fontWeight : '500',\n    fontSize : 15,\n    paddingLeft: 110\n  },\n  input: {\n    height: 50,\n    width: 350,\n    borderWidth: 0.2,\n    marginTop: 20,\n    borderRadius: 20,\n    padding: 10,\n    marginBottom: 40\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50,\n    borderRadius : 30,\n    marginLeft : 40,\n    marginBottom: -5,\n  },\n  contactview: {\n  height : 70,\n  marginTop: 0,\n  }\n});\n\nexport default TabOneScreen;\n"]},"metadata":{},"sourceType":"module"}