{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Text, View } from \"../components/Themed\";\nimport Login from \"./Login\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function OurTeam() {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showContacts = _useState2[0],\n      setShowContacts = _useState2[1];\n\n  var contactsArray = require(\"../constants/OurTeam.json\");\n\n  var _useState3 = useState(contactsArray),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredArray = _useState4[0],\n      setfilteredArray = _useState4[1];\n\n  var handleSearch = function handleSearch(text) {\n    setfilteredArray(contactsArray.filter(function (i) {\n      return i.Name.toLowerCase().includes(text);\n    }));\n  };\n\n  var handleContactClick = function handleContactClick(name, address, Photo, phoneNo, spouseName, spouseNo, email, kids) {\n    navigation.navigate(\"ContactDetails\", {\n      contactname: name,\n      address: address,\n      photo: Photo,\n      phoneNo: phoneNo,\n      spouseName: spouseName,\n      spouseNo: spouseNo,\n      email: email,\n      kids: kids\n    });\n  };\n\n  return _jsxs(_Fragment, {\n    children: [!showContacts && _jsx(View, {\n      style: styles.LoginContainer,\n      children: _jsx(ScrollView, {\n        children: _jsx(Login, {\n          setShowContacts: setShowContacts\n        })\n      })\n    }), showContacts && _jsx(ScrollView, {\n      style: styles.scrollView,\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Search By Name.....\",\n          keyboardType: \"name-phone-pad\",\n          onChangeText: function onChangeText(text) {\n            handleSearch(text);\n          }\n        }), filteredArray.map(function (item, i) {\n          return _jsxs(View, {\n            style: styles.contactview,\n            children: [_jsx(Text, {\n              style: styles.position,\n              children: item.Position\n            }), _jsx(Text, {\n              style: styles.contacts,\n              onPress: function onPress() {\n                return handleContactClick(item.Name, item.Address, item.Photo, item.PhoneNumber, item.SpouseName, item.SpousePhNo, item.email, item.kids);\n              },\n              children: item.Name\n            }, i + 2)]\n          }, i);\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  LoginContainer: {\n    flex: 1\n  },\n  scrollView: {},\n  position: {\n    textAlign: 'center',\n    letterSpacing: 0,\n    marginTop: 10,\n    fontWeight: 'bold'\n  },\n  contacts: {\n    textAlign: 'center',\n    marginTop: 5,\n    fontWeight: '400'\n  },\n  input: {\n    height: 50,\n    width: 350,\n    borderWidth: 0.2,\n    marginTop: 20,\n    borderRadius: 20,\n    padding: 10,\n    marginBottom: 40\n  },\n  contactview: {\n    height: 70,\n    marginTop: 0,\n    borderWidth: .17,\n    borderColor: 'grey',\n    width: 500\n  }\n});","map":{"version":3,"sources":["/Users/kevinjames/Desktop/TPC-App/screens/OurTeam.js"],"names":["useNavigation","useState","Text","View","Login","OurTeam","navigation","showContacts","setShowContacts","contactsArray","require","filteredArray","setfilteredArray","handleSearch","text","filter","i","Name","toLowerCase","includes","handleContactClick","name","address","Photo","phoneNo","spouseName","spouseNo","email","kids","navigate","contactname","photo","styles","LoginContainer","scrollView","container","input","map","item","contactview","position","Position","contacts","Address","PhoneNumber","SpouseName","SpousePhNo","StyleSheet","create","flex","alignItems","justifyContent","textAlign","letterSpacing","marginTop","fontWeight","height","width","borderWidth","borderRadius","padding","marginBottom","borderColor"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/native';\nimport { useState } from 'react';\nimport { ScrollView, StyleSheet, TextInput } from 'react-native';\nimport { Text, View } from '../components/Themed';\nimport Login from './Login';\n\nexport default function OurTeam () {\n\n  const navigation = useNavigation()\n  const [showContacts, setShowContacts] = useState(false)\n\n\n  let contactsArray = require('../constants/OurTeam.json');\n     const[filteredArray,setfilteredArray] = useState(contactsArray);\n\n      const handleSearch = (text) => {\n          setfilteredArray(contactsArray.filter(i => i.Name.toLowerCase().includes(text)))\n     }\n\n  const handleContactClick = (name,address,Photo,phoneNo,spouseName,spouseNo,email,kids) => {\n    navigation.navigate(\"ContactDetails\", {contactname : name,address : address, photo : Photo, phoneNo : phoneNo,spouseName : spouseName,\n    spouseNo : spouseNo,email : email,kids : kids})\n  }\n  return (<>\n    {!showContacts && <View style={styles.LoginContainer}>\n      <ScrollView >\n      <Login setShowContacts={setShowContacts}></Login>\n      </ScrollView>\n      \n    </View>}\n\n     {showContacts && <ScrollView style={styles.scrollView}>\n      <View style={styles.container}>\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Search By Name.....\"\n          keyboardType=\"name-phone-pad\"\n          onChangeText={text => { handleSearch(text) }}\n\n        />\n        {filteredArray.map((item,i) => {\n          return (\n            <View style={styles.contactview}\n            key={i}\n            >\n              <Text style={styles.position}>{item.Position}</Text>\n              <Text  key={i+2} style={styles.contacts}  onPress={() => handleContactClick(item.Name,item.Address,item.Photo,item.PhoneNumber,\n                item.SpouseName,item.SpousePhNo,item.email,item.kids)}>\n                {item.Name}\n              </Text>\n            </View>\n          )\n        }\n        )}\n      </View>\n    </ScrollView>}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  LoginContainer: {\n    flex: 1\n  },\n  scrollView: {\n  },\n  position: {\n    textAlign : 'center',\n    letterSpacing : 0,\n    marginTop : 10,\n    fontWeight : 'bold'\n  },\n  contacts: {\n    textAlign : 'center',\n    marginTop : 5,\n    fontWeight : '400'\n  \n  },\n  input: {\n    height: 50,\n    width: 350,\n    borderWidth: 0.2,\n    marginTop: 20,\n    borderRadius: 20,\n    padding: 10,\n    marginBottom: 40\n  },\n  contactview: {\n  height : 70,\n  marginTop: 0,\n  borderWidth : .17,\n  borderColor :'grey',\n  width : 500\n\n  }\n});\n"]},"metadata":{},"sourceType":"module"}