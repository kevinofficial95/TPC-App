{"ast":null,"code":"import * as React from 'react';\nimport Appearance from \"../Appearance\";\nexport default function useColorScheme() {\n  var _React$useState = React.useState(Appearance.getColorScheme()),\n      colorScheme = _React$useState[0],\n      setColorScheme = _React$useState[1];\n\n  React.useEffect(function () {\n    function listener(appearance) {\n      setColorScheme(appearance.colorScheme);\n    }\n\n    var _Appearance$addChange = Appearance.addChangeListener(listener),\n        remove = _Appearance$addChange.remove;\n\n    return remove;\n  });\n  return colorScheme;\n}","map":{"version":3,"sources":["/Users/kevinjames/Desktop/TPC-App/node_modules/react-native-web/dist/exports/useColorScheme/index.js"],"names":["React","Appearance","useColorScheme","_React$useState","useState","getColorScheme","colorScheme","setColorScheme","useEffect","listener","appearance","_Appearance$addChange","addChangeListener","remove"],"mappings":"AASA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP;AACA,eAAe,SAASC,cAAT,GAA0B;AACvC,MAAIC,eAAe,GAAGH,KAAK,CAACI,QAAN,CAAeH,UAAU,CAACI,cAAX,EAAf,CAAtB;AAAA,MACIC,WAAW,GAAGH,eAAe,CAAC,CAAD,CADjC;AAAA,MAEII,cAAc,GAAGJ,eAAe,CAAC,CAAD,CAFpC;;AAIAH,EAAAA,KAAK,CAACQ,SAAN,CAAgB,YAAM;AACpB,aAASC,QAAT,CAAkBC,UAAlB,EAA8B;AAC5BH,MAAAA,cAAc,CAACG,UAAU,CAACJ,WAAZ,CAAd;AACD;;AAED,QAAIK,qBAAqB,GAAGV,UAAU,CAACW,iBAAX,CAA6BH,QAA7B,CAA5B;AAAA,QACII,MAAM,GAAGF,qBAAqB,CAACE,MADnC;;AAGA,WAAOA,MAAP;AACD,GATD;AAUA,SAAOP,WAAP;AACD","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport Appearance from '../Appearance';\nexport default function useColorScheme() {\n  var _React$useState = React.useState(Appearance.getColorScheme()),\n      colorScheme = _React$useState[0],\n      setColorScheme = _React$useState[1];\n\n  React.useEffect(() => {\n    function listener(appearance) {\n      setColorScheme(appearance.colorScheme);\n    }\n\n    var _Appearance$addChange = Appearance.addChangeListener(listener),\n        remove = _Appearance$addChange.remove;\n\n    return remove;\n  });\n  return colorScheme;\n}"]},"metadata":{},"sourceType":"module"}