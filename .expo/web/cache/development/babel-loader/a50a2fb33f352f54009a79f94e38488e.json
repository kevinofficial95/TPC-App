{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TabThreeScreen = function TabThreeScreen(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var image = {\n    uri: \"https://drive.google.com/uc?export=view&id=1UsYhWJ58OkaO1dq7GtCPlgkfZ7KfFIiw\"\n  };\n\n  var imagee = require(\"../assets/images/bg.jpg\");\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  useEffect(function () {\n    fetch('https://beta.ourmanna.com/api/v1.json').then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setData(json);\n    }).catch(function (error) {\n      return console.error(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ImageBackground, {\n      source: imagee,\n      resizeMode: \"cover\",\n      style: styles.image\n    }), isLoading ? _jsx(Text, {\n      children: \"Loading...\"\n    }) : _jsxs(View, {\n      style: {\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'center'\n      },\n      children: [_jsx(Text, {\n        style: styles.reference,\n        children: data.verse.details.reference\n      }), _jsxs(Text, {\n        style: styles.verse,\n        children: [\"\\\"\", data.verse.details.text, \"\\\"\"]\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  reference: {\n    fontSize: 20,\n    textAlign: 'center',\n    marginBottom: 10,\n    fontWeight: '500'\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  verse: {\n    fontSize: 16,\n    textAlign: 'center'\n  },\n  container: {\n    flex: 1\n  }\n});\nexport default TabThreeScreen;","map":{"version":3,"sources":["/Users/kevinjames/Desktop/TPC-Directory/screens/TabThreeScreen.tsx"],"names":["React","useEffect","useState","TabThreeScreen","image","uri","imagee","require","isLoading","setLoading","data","setData","fetch","then","response","json","catch","error","console","finally","styles","container","flex","flexDirection","justifyContent","reference","verse","details","text","StyleSheet","create","fontSize","textAlign","marginBottom","fontWeight"],"mappings":";;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;AAQA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAwC;AAAA;;AAC3D,MAAMC,KAAK,GAAG;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAd;;AACA,MAAMC,MAAM,GAAGC,OAAO,2BAAtB;;AACA,kBAAgCL,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOM,SAAP;AAAA,MAAkBC,UAAlB;;AACA,mBAAwBP,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOQ,IAAP;AAAA,MAAaC,OAAb;;AACAV,EAAAA,SAAS,CAAC,YAAM;AACZW,IAAAA,KAAK,CAAC,uCAAD,CAAL,CACGC,IADH,CACQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADR,EAEGF,IAFH,CAEQ,UAACE,IAAD;AAAA,aAAUJ,OAAO,CAACI,IAAD,CAAjB;AAAA,KAFR,EAGGC,KAHH,CAGS,UAACC,KAAD;AAAA,aAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAX;AAAA,KAHT,EAIGE,OAJH,CAIW;AAAA,aAAMV,UAAU,CAAC,KAAD,CAAhB;AAAA,KAJX;AAKD,GANM,EAMJ,EANI,CAAT;AAQF,SACD,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEW,MAAM,CAACC,SAApB;AAAA,eACI,KAAC,eAAD;AAAiB,MAAA,MAAM,EAAEf,MAAzB;AAAiC,MAAA,UAAU,EAAC,OAA5C;AAAoD,MAAA,KAAK,EAAEc,MAAM,CAAChB;AAAlE,MADJ,EAEMI,SAAS,GAAG,KAAC,IAAD;AAAA;AAAA,MAAH,GACR,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEc,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,aAAa,EAAE,QAA1B;AAAqCC,QAAAA,cAAc,EAAE;AAArD,OAAb;AAAA,iBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,SAApB;AAAA,kBAAgCf,IAAI,CAACgB,KAAL,CAAWC,OAAX,CAAmBF;AAAnD,QADF,EAEE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACM,KAApB;AAAA,yBAA6BhB,IAAI,CAACgB,KAAL,CAAWC,OAAX,CAAmBC,IAAhD;AAAA,QAFF;AAAA,MAHP;AAAA,IADC;AAaD,CA1BD;;AA4BA,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACRM,IAAAA,QAAQ,EAAG,EADH;AAERC,IAAAA,SAAS,EAAE,QAFH;AAGRC,IAAAA,YAAY,EAAG,EAHP;AAIRC,IAAAA,UAAU,EAAG;AAJL,GADoB;AAOjC9B,EAAAA,KAAK,EAAE;AACHkB,IAAAA,IAAI,EAAE,CADH;AAEHE,IAAAA,cAAc,EAAE;AAFb,GAP0B;AAWjCE,EAAAA,KAAK,EAAE;AACLK,IAAAA,QAAQ,EAAG,EADN;AAELC,IAAAA,SAAS,EAAG;AAFP,GAX0B;AAejCX,EAAAA,SAAS,EAAE;AACXC,IAAAA,IAAI,EAAE;AADK;AAfsB,CAAlB,CAAf;AAoBA,eAAenB,cAAf","sourcesContent":["import { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport React, { useEffect, useState } from 'react';\nimport { Alert, ScrollView, StyleSheet, TextInput, Image } from 'react-native';\n\nimport { FlatList, Text, View,ImageBackground } from 'react-native';\nimport { RootTabScreenProps } from '../types';\n// import { WebView } from 'react-native-webview'; \n//import ModalScreen from './ModalScreen';\n\nconst TabThreeScreen = ({  }: RootTabScreenProps<'TabOne'>) => {\n    const image = { uri: \"https://drive.google.com/uc?export=view&id=1UsYhWJ58OkaO1dq7GtCPlgkfZ7KfFIiw\" };\n    const imagee = require('../assets/images/bg.jpg')\n    const [isLoading, setLoading] = useState(true);\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        fetch('https://beta.ourmanna.com/api/v1.json')\n          .then((response) => response.json())\n          .then((json) => setData(json))\n          .catch((error) => console.error(error))\n          .finally(() => setLoading(false));\n      }, []);\n\n  return (\n <View style={styles.container}>\n     <ImageBackground source={imagee} resizeMode=\"cover\" style={styles.image}></ImageBackground>\n      {isLoading ? <Text>Loading...</Text> : \n      ( <View style={{ flex: 1, flexDirection: 'column' , justifyContent: 'center'}}>\n          <Text style={styles.reference}>{data.verse.details.reference}</Text>\n          <Text style={styles.verse}>\"{data.verse.details.text}\"</Text>\n        </View>\n      )}\n    </View>\n  \n  \n  )\n}\n\nconst styles = StyleSheet.create({\n  reference: {\n     fontSize : 20,\n     textAlign :'center',\n     marginBottom : 10,\n     fontWeight : '500'\n},\nimage: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\nverse: {\n  fontSize : 16,\n  textAlign : 'center'\n},\ncontainer: {\nflex :1,\n}\n});\n\nexport default TabThreeScreen;\n"]},"metadata":{},"sourceType":"module"}